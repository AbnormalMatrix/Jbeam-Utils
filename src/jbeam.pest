WHITESPACE = _{ " " | "\t" | "\r" | "\n" | "," }
COMMENT = _{ ("//" ~ (!"\n" ~ ANY)* ~ "\n") | ("/*" ~ (!"*/" ~ ANY)* ~ "*/") }

object = {
"{" ~ "}" |
"{" ~ pair ~ pair* ~ "}"
}
pair = { string ~ ":" ~ value }

array = {
"[" ~ "]" |
"[" ~ value ~ value* ~ "]"
}

value = _{ object | array | string | number | boolean | null }

boolean = { "true" | "false" }

null = { "null" }

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
!("\"" | "\\") ~ ANY
| "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
| "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

number = @{
"-"?
~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
~ ("." ~ ASCII_DIGIT*)?
~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

quote = _{ "\"" }

// jbeam files can contain multiple parts
// we know an object is a part if it has an information object

part_values = _{ information | slot_type | slots | controller | soundscape | sounds | props | analog_odometer | refnodes | camera_chase | camera_external | cameras_internal | flexbodies | slidenodes | rails | torsionbars | nodes | beams | triangles | other_object }

part = { string ~ ":" ~ "{" ~ information ~ part_values* ~ "}"}


// information object

information = { quote ~ "information" ~ quote ~ ":" ~ "{" ~ authors ~ name ~ part_value ~ "}" }

authors = { quote ~ "authors" ~ quote ~ ":" ~ string }
name = { quote ~ "name" ~ quote ~ ":" ~ string }
part_value = { quote ~ "value" ~ quote ~ ":" ~ number }

// slot_type object

slot_type = { quote ~ "slotType" ~ quote ~ ":" ~ string }

// slots object

slots = { quote ~ "slots" ~ quote ~ ":" ~ "[" ~ slot* ~ "]" }

slot = { "[" ~ string ~ string ~ string ~ ("{" ~ slot_modifier* ~ "}")? ~ "]" }
slot_modifier = {
(quote ~ "coreSlot" ~ quote ~ ":" ~ boolean) |
(quote ~ "nodeOffset" ~ quote ~ ":" ~ xyz)
}

xyz = _{ "{" ~ quote ~ "x" ~ quote ~ ":" ~ number ~ quote ~ "y" ~ quote ~ ":" ~ number ~ quote ~ "z" ~ quote ~ ":" ~ number ~ "}" }

// controller object !!!TODO!!!

controller = { quote ~ "controller" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// soundscape object !!!TODO!!!

soundscape = { quote ~ "soundscape" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// sounds object !!!TODO!!!

sounds = { quote ~ "sounds" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// props object !!!TODO!!!

props = { quote ~ "props" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// analog_odometer object !!!TODO!!!

analog_odometer = { quote ~ "analogOdometer" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// refnodes object !!!TODO!!!

refnodes = { quote ~ "refNodes" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// camera_chase object !!!TODO!!!

camera_chase = { quote ~ "cameraChase" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// camera_external object !!!TODO!!!

camera_external = { quote ~ "cameraExternal" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// cameras_internal object !!!TODO!!!

cameras_internal = { quote ~ "camerasInternal" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// flexbodies object !!!TODO!!!

flexbodies = { quote ~ "flexbodies" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }



flexbody = { "[" ~ string ~ flexbody_groups ~ non_flex_materials? ~ "]" }
flexbody_groups = { "[" ~ string+ ~ "]" }
non_flex_materials = { "[" ~ string+ ~ "]" }

// slidenodes object !!!TODO!!!

slidenodes = { quote ~ "slidenodes" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// rails object !!!TODO!!!

rails = { quote ~ "rails" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// torsionbars object

torsionbars = { quote ~ "torsionbars" ~ quote ~ ":" ~ "["~ (torsionbar | torsionbar_modifiers)* ~ "]" }

torsionbar = { "[" ~ string ~ string ~ string ~ string ~ torsionbar_modifiers? ~ "]" }
    torsionbar_modifiers = { "{" ~ torsionbar_modifier* ~ "}" }
    torsionbar_modifier = {
    quote ~ "spring" ~ quote ~ ":" ~ number |
    quote ~ "damp" ~ quote ~ ":" ~ number |
    quote ~ "deform" ~ quote ~ ":" ~ number |
    quote ~ "strength" ~ quote ~ ":" ~ number |
    quote ~ "precompressionAngle" ~ quote ~ ":" ~ number
}

// nodes object

nodes = { quote ~ "nodes" ~ quote ~ ":" ~ "[" ~ (node | node_modifiers | "[" ~ string ~ string ~ string ~ string ~ "]")* ~ "]" }

node = { "[" ~ string ~ number ~ number ~ number ~ node_modifiers? ~ "]" }

node_modifiers = { "{" ~ node_modifier* ~ "}" }

node_modifier = {
    node_weight |
    node_collision |
    node_self_collision |
    node_group |
    node_friction_coef |
    node_material |
    node_fixed |
    node_coupler_strength |
    node_coupler_tag |
    node_coupler_radius |
    node_break_group |
    node_coupler_lock |
    node_import_electrics |
    node_import_inputs |
    node_surface_coef |
    node_volume_coef |
    node_no_load_coef |
    node_full_load_coef |
    node_stribeck_exponent |
    node_stribeck_vel_mult |
    node_softness_coef |
    node_tread_coef |
    node_tag |
    node_load_sensitivity_slope |
    node_paired_node |
    node_chem_energy |
    node_burn_rate |
    node_flash_point |
    node_spec_heat |
    node_smoke_point |
    node_self_ignition_coef |
    node_engine_group |
    node_coupler_start_radius
}

node_weight = { quote ~ "nodeWeight" ~ quote ~ ":" ~ number }
node_collision = { quote ~ "collision" ~ quote ~ ":" ~ boolean }
node_self_collision = { quote ~ "selfCollision" ~ quote ~ ":" ~ boolean }
node_group = { quote ~ "group" ~ quote ~ ":" ~ (("[" ~ string* ~ "]") | string) }
node_friction_coef = { quote ~ "frictionCoef" ~ quote ~ ":" ~ number }
node_material = { quote ~ "nodeMaterial" ~ quote ~ ":" ~ string }
node_fixed = { quote ~ "fixed" ~ quote ~ ":" ~ boolean }
node_coupler_strength = { quote ~ "couplerStrength" ~ quote ~ ":" ~ number }
node_coupler_tag = { quote ~ "couplerTag" ~ quote ~ ":" ~ string }
node_coupler_radius = { quote ~ "couplerRadius" ~ quote ~ ":" ~ number }
node_break_group = { quote ~ "breakGroup" ~ quote ~ ":" ~ string }
node_coupler_lock = { quote ~ "couplerLock" ~ quote ~ ":" ~ boolean }
node_import_electrics = { quote ~ "importElectrics" ~ quote ~ ":" ~ "[" ~ string* ~ "]" }
node_import_inputs = { quote ~ "importInputs" ~ quote ~ ":" ~ "[" ~ string* ~ "]" }
node_surface_coef = { quote ~ "surfaceCoef" ~ quote ~ ":" ~ number }
node_volume_coef = { quote ~ "volumeCoef" ~ quote ~ ":" ~ number }
node_no_load_coef = { quote ~ "noLoadCoef" ~ quote ~ ":" ~ number }
node_full_load_coef = { quote ~ "fullLoadCoef" ~ quote ~ ":" ~ number }
node_stribeck_exponent = { quote ~ "stribeckExponent" ~ quote ~ ":" ~ number }
node_stribeck_vel_mult = { quote ~ "stribeckVelMult" ~ quote ~ ":" ~ number }
node_softness_coef = { quote ~ "softnessCoef" ~ quote ~ ":" ~ number }
node_tread_coef = { quote ~ "treadCoef" ~ quote ~ ":" ~ number }
node_tag = { quote ~ "tag" ~ quote ~ ":" ~ string }
node_load_sensitivity_slope = { quote ~ "loadSensitivitySlope" ~ quote ~ ":" ~ number }
node_paired_node = { quote ~ "pairedNode" ~ quote ~ ":" ~ string }
// undocumented:
node_chem_energy = { quote ~ "chemEnergy" ~ quote ~ ":" ~ (number | boolean) }
node_burn_rate = { quote ~ "burnRate" ~ quote ~ ":" ~ (number | boolean) }
node_flash_point = { quote ~ "flashPoint" ~ quote ~ ":" ~ (number | boolean) }
node_spec_heat = { quote ~ "specHeat" ~ quote ~ ":" ~ (number | boolean) }
node_smoke_point = { quote ~ "smokePoint" ~ quote ~ ":" ~ (number | boolean) }
node_self_ignition_coef = { quote ~ "selfIgnitionCoef" ~ quote ~ ":" ~ (number | boolean) }
node_engine_group = { quote ~ "engineGroup" ~ quote ~ ":" ~ (("[" ~ string* ~ "]") | string) }
node_coupler_start_radius = { quote ~ "couplerStartRadius" ~ quote ~ ":" ~ number }
// beams object

beams = { quote ~ "beams" ~ quote ~ ":" ~ "[" ~ (beam | beam_modifiers)* ~ "]" }

beam = { "[" ~ string ~ string ~ beam_modifiers? ~ "]" }

beam_modifiers = { "{" ~ beam_modifier+ ~ "}" }

beam_modifier = {
    beam_beam_type |
    beam_beam_spring |
    beam_beam_damp |
    beam_beam_strength |
    beam_beam_deform |
    beam_beam_precompression |
    beam_beam_precompression_range |
    beam_beam_precompression_time |
    beam_break_group |
    beam_break_group_type |
    beam_name |
    beam_damp_cuttoff_hz |
    beam_deform_limit |
    beam_deform_limit_expansion |
    beam_optional |
    beam_deform_group |
    beam_deformation_trigger_ratio |
    beam_sound_file |
    beam_color_factor |
    beam_attack_factor |
    beam_volume_factor |
    beam_decay_factor |
    beam_pitch_factor |
    beam_max_stress |
    beam_beam_long_bound |
    beam_beam_short_bound |
    beam_disable_mesh_breaking |
    beam_disable_triangle_breaking |
    beam_bound_zone |
    beam_beam_limit_spring |
    beam_beam_limit_damp |
    beam_lbeam
}

beam_beam_type = { quote ~ "beamType" ~ quote ~ ":" ~ string }
beam_beam_spring = { quote ~ "beamSpring" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_damp = { quote ~ "beamDamp" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_strength = { quote ~ "beamStrength" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_deform = { quote ~ "beamDeform" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_precompression = { quote ~ "beamPrecompression" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_precompression_range = { quote ~ "beamPrecompressionRange" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_precompression_time = { quote ~ "beamPrecompressionTime" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_break_group = { quote ~ "breakGroup" ~ quote ~ ":" ~ string }
beam_break_group_type = { quote ~ "breakGroupType" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_name = { quote ~ "name" ~ quote ~ ":" ~ string }
beam_damp_cuttoff_hz = { quote ~ "dampCutoffHz" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_deform_limit = { quote ~ "deformLimit" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_deform_limit_expansion = { quote ~ "deformLimitExpansion" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_optional = { quote ~ "optional" ~ quote ~ ":" ~ boolean }
beam_deform_group = { quote ~ "deformGroup" ~ quote ~ ":" ~ string }
beam_deformation_trigger_ratio = { quote ~ "deformationTriggerRatio" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_sound_file = { quote ~ "soundFile" ~ quote ~ ":" ~ string }
beam_color_factor = { quote ~ "colorFactor" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_attack_factor = { quote ~ "attackFactor" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_volume_factor = { quote ~ "volumeFactor" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_decay_factor = { quote ~ "decayFactor" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_pitch_factor = { quote ~ "pitchFactor" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_max_stress = { quote ~ "maxStress" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
// undocumented
beam_beam_long_bound = { quote ~ "beamLongBound" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_short_bound = { quote ~ "beamShortBound" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_disable_mesh_breaking = { quote ~ "disableMeshBreaking" ~ quote ~ ":" ~ boolean }
beam_disable_triangle_breaking = { quote ~ "disableTriangleBreaking" ~ quote ~ ":" ~ boolean }
beam_bound_zone = { quote ~ "boundZone" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_limit_spring = { quote ~ "beamLimitSpring" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }
beam_beam_limit_damp = { quote ~ "beamLimitDamp" ~ quote ~ ":" ~ (number | quote ~ quote | quote ~ "FLT_MAX" ~ quote) }

beam_lbeam = { string ~ ":" ~ string }

// triangles object

triangles = { quote ~ "triangles" ~ quote ~ ":" ~ "[" ~ (triangle | triangle_modifiers)* ~ "]" }

triangle = { "[" ~ string ~ string ~ string ~ triangle_modifiers? ~ "]" }

triangle_modifiers = { "{" ~ triangle_modifier+ ~ "}" }

triangle_modifier = {
    triangle_ground_model |
    triangle_drag_coef |
    triangle_group |
    triangle_triangle_type |
    triangle_lift_coef |
    triangle_optional |
    triangle_break_group
}

triangle_ground_model = { quote ~ "groundModel" ~ quote ~ ":" ~ string }
triangle_drag_coef = { quote ~ "dragCoef" ~ quote ~ ":" ~ number }
triangle_group = { quote ~ "group" ~ quote ~ ":" ~ string }
triangle_triangle_type = { quote ~ "triangleType" ~ quote ~ ":" ~ string }
triangle_lift_coef = { quote ~ "liftCoef" ~ quote ~ ":" ~ number }
triangle_optional = { quote ~ "optional" ~ quote ~ ":" ~ boolean }
triangle_break_group = { quote ~ "breakGroup" ~ quote ~ ":" ~ string }


other_object = { string ~ ":" ~ ("{" ~ ( value ~ ":" ~ value )+ ~ "}"| "[" ~ value+ ~ "]" ) }

parts = _{ SOI ~ "{" ~  part* ~ "}" ~ EOI }

jbeam = _{ SOI ~ (object | array) ~ EOI }
