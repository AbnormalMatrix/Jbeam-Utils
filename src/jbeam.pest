WHITESPACE = _{ " " | "\t" | "\r" | "\n" | "," }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* ~ "\n" }

object = {
    "{" ~ "}" |
    "{" ~ pair ~ pair* ~ "}"
}
pair = { string ~ ":" ~ value }

array = {
    "[" ~ "]" |
    "[" ~ value ~ value* ~ "]"
}

value = _{ object | array | string | number | boolean | null }

boolean = { "true" | "false" }

null = { "null" }

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

quote = _{ "\"" }

// jbeam files can contain multiple parts
// we know an object is a part if it has an information object

part_values = _{ information | slot_type | slots | controller | soundscape | refnodes | camera_chase | camera_external | cameras_internal | flexbodies | torsionbars }

part = { string ~ ":" ~ "{" ~ information ~ part_values* ~ "}"}


// information object

information = { quote ~ "information" ~ quote ~ ":" ~ "{" ~ authors ~ name ~ part_value ~ "}" }

authors = { quote ~ "authors" ~ quote ~ ":" ~ string }
name = { quote ~ "name" ~ quote ~ ":" ~ string }
part_value = { quote ~ "value" ~ quote ~ ":" ~ number }

// slot_type object

slot_type = { quote ~ "slotType" ~ quote ~ ":" ~ string }

// slots object

slots = { quote ~ "slots" ~ quote ~ ":" ~ "[" ~ slot* ~ "]" }

slot = { "[" ~ string ~ string ~ string ~ ("{" ~ slot_modifier* ~ "}")? ~ "]" }
slot_modifier = {
    (quote ~ "coreSlot" ~ quote ~ ":" ~ boolean) |
    (quote ~ "nodeOffset" ~ quote ~ ":" ~ xyz)
}

xyz = _{ "{" ~ quote ~ "x" ~ quote ~ ":" ~ number ~ quote ~ "y" ~ quote ~ ":" ~ number ~ quote ~ "z" ~ quote ~ ":" ~ number ~ "}" }

// controller object !!!TODO!!!

controller = { quote ~ "controller" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// soundscape object !!!TODO!!!

soundscape = { quote ~ "soundscape" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// refnodes object !!!TODO!!!

refnodes = { quote ~ "refNodes" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// camera_chase object !!!TODO!!!

camera_chase = { quote ~ "cameraChase" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// camera_external object !!!TODO!!!

camera_external = { quote ~ "cameraExternal" ~ quote ~ ":" ~ "{" ~ (string ~ ":" ~ value)+ ~ "}" }

// cameras_internal object !!!TODO!!!

cameras_internal = { quote ~ "camerasInternal" ~ quote ~ ":" ~ "[" ~ value+ ~ "]" }

// flexbodies object

flexbodies = { quote ~ "flexbodies" ~ quote ~ ":" ~ "[" ~ (flexbody | ("[" ~ string ~ string ~ string ~ "]") )* ~"]" }

flexbody = { "[" ~ string ~ flexbody_groups ~ non_flex_materials? ~ "]" }
flexbody_groups = { "[" ~ string+ ~ "]" }
non_flex_materials = { "[" ~ string+ ~ "]" }

// torsionbars object

torsionbars = { quote ~ "torsionbars" ~ quote ~ ":" ~ "["~ (torsionbar | torsionbar_modifiers)* ~ "]" }

torsionbar = { "[" ~ string ~ string ~ string ~ string ~ torsionbar_modifiers? ~ "]" }
torsionbar_modifiers = { "{" ~ torsionbar_modifier* ~ "}" }
torsionbar_modifier = {
    quote ~ "spring" ~ quote ~ ":" ~ number |
    quote ~ "damp" ~ quote ~ ":" ~ number |
    quote ~ "deform" ~ quote ~ ":" ~ number |
    quote ~ "strength" ~ quote ~ ":" ~ number |
    quote ~ "precompressionAngle" ~ quote ~ ":" ~ number
}

// nodes object

nodes = { quote ~ "nodes" ~ quote ~ ":" ~ "[" ~ (node | node_modifiers | "[" ~ string ~ string ~ string ~ string ~ "]")* ~ "]" }

node = { "[" ~ string ~ number ~ number ~ number ~ node_modifiers? ~ "]" }



jbeam = _{ SOI ~ (object | array) ~ EOI }
